from random import randrange

class Bank:
    issuer_identification_number = str(400000)  # IIN

    def luhn_algorithm(self):
        digit_list = []
        digits_for_luhn = Bank.issuer_identification_number + self.customer_account_number
        print('ok', Bank.issuer_identification_number)
        print('ok', self.customer_account_number)
        print('ok', digits_for_luhn)
        for digit in digits_for_luhn:
            digit_list += digit
        print('ok', digit_list)
        for i in range(0, 15):  # Multiply odd digits by 2:
            if (i % 2) == 0:
                digit_list[int(i)] = str(int(digit_list[int(i)]) * 2)
                # print('po pomnożeniu', i, digit_list[int(i)])
        for i in range(0, 15):  # Subtract 9 to numbers over 9:
            if int(digit_list[int(i)]) > 9:
                digit_list[int(i)] = str(int(digit_list[int(i)]) - 9)
                # print('po odjęciu', i, digit_list[int(i)])
        print('ok', digit_list)
        return digit_list

    def checksum(self):
        sum_list = Bank.luhn_algorithm(self)
        print(sum_list)
        digit_sum = 0
        for digit in sum_list:
            digit_sum += int(digit)
        print(digit_sum)
        if (digit_sum % 10) == 0:
            card_number = Bank.issuer_identification_number + self.customer_account_number
            control_number = 0
            print('cn', control_number)
        else:
            control_number = digit_sum % 10
            print('cn', control_number)
        if control_number == 0:
            card_number = Bank.issuer_identification_number + self.customer_account_number + '0'
            print('spr', card_number)
        else:
            Luhn_number = 10 - control_number
            print('Luhn', Luhn_number)
            card_number = Bank.issuer_identification_number + self.customer_account_number + str(Luhn_number)
        print(card_number)
        print(len(card_number))
        return card_number

    def card_code(self):  # Create a 9-digit account number and assign a PIN to it
        file = open('Bank customer list.txt', 'a+')
        self.customer_account_number = (str(randrange(999999999))).zfill(9)
        self.card_number = Bank.checksum(self)
        customer_account_info = '{}\n'.format(self.card_number)
        file.write(customer_account_info)
        file.close()
        return self.card_number

    def save_number(self, lst): # pin number were assigned to a given person as DICT
        all_login_data = {lst[i]: lst[i + 1] for i in range(0, len(lst), 2)}
        return all_login_data



bank = Bank()
bank.card_code()
